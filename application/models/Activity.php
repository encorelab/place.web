<?php

/**
 * Activity
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Activity extends BaseActivity
{
    private $_author;
    
    public function getMessage(){
        $str = "";
        
        $this->_author = Doctrine::getTable("User")->find($this->author_id);
        
        switch ($this->activity_type_id) {
            case ActivityType::$VOTED_ON_COMMENT:
                $str = $this->toStringVotedOnComment();
                break;
            case ActivityType::$VOTED_ON_ANSWER:
                $str = $this->toStringVotedOnAnswer();
                break;
            case ActivityType::$VOTED_ON_ANSWER_CONCEPT :
                $str = $this->toStringVotedOnAnswerConcept();
                break;
            case ActivityType::$VOTED_ON_EXAMPLE_CONCEPT:
                $str = $this->toStringVotedOnExampleConcept();
                break;
            case ActivityType::$COMMENTED_ON_COMMENT:
                $str = $this->toStringCommentedOnComment();
                break;
            case ActivityType::$COMMENTED_ON_ANSWER:
                $str = $this->toStringCommentedOnAnswer();
                break;
            case ActivityType::$COMMENTED_ON_EXAMPLE:
                $str = $this->toStringCommentedOnExample();
                break;
            case ActivityType::$ASSESSED_COMMENT:
                $str = $this->toStringAssessedComment();
                break;
            case ActivityType::$ASSESSED_EXAMPLE:
                $str = $this->toStringAssessedExample();
                break;
            case ActivityType::$ASSESSED_ANSWER:
                $str = $this->toStringAssessedAnswer();
                break;
            case ActivityType::$CREATED_EXAMPLE:
                $str = $this->toStringCreatedExample();
                break;
            case ActivityType::$CREATED_QUESTION:
                $str = $this->toStringCreatedQuestion();
                break;
            case ActivityType::$ANSWERED_QUESTION:
                $str = $this->toStringAnsweredQuestion();
                break;
            case ActivityType::$VOTED_ON_QUESTION_CONCEPT:
                $str = $this->toStringVotedOnQuestionConcept();
                break;
            case ActivityType::$VOTED_ON_EXAMPLE_QUESTION:
                $str = $this->toStringVotedOnExampleQuestion();
                break;
            case ActivityType::$TAGGED_QUESTION_WITH_CONCEPT:
                $str = $this->toStringTaggedQuestionWithConcept();
                break;
            case ActivityType::$TAGGED_EXAMPLE_WITH_CONCEPT:
                $str = $this->toStringTaggedExampleWithConcept();
                break;
            case ActivityType::$CREATED_JOURNAL_ENTRY:
				$str = $this->toStringCreatedJournalEntry();
				break;

            default:
                $str = "Error: unidentified activity type"; 
                break;
        }
        
        return $str;
    }
    
	public function toStringCreatedJournalEntry(){
		$assReview = Doctrine::getTable('AssessmentReviews')->find($this->i1);
		$reviewSummary = substr($assReview->log, 0, 100);
		
		$link = '';
		if ($assReview->t1 == 'question'){
			$question = Doctrine::getTable('Question')->find($assReview->i1);
			$link = $question->getUrl();
		}elseif($assReview->t1 == 'examples'){
			$example = Doctrine::getTable('Example')->find($assReview->i1);
			$link = $example->getUrl();
		}
		
		return "<div class='alert alert-created-journal-entry'>Remember to discuss: <a href='$link'>link</a> $reviewSummary...</div>";
	}

    public function toStringVotedOnComment() {
        $comment = Doctrine::getTable("Comment")->find($this->i2);

		// temp fixed by Anto, needs fix to work with arbitrary objects commented on
        $str = $this->_genAuthorHtml()." voted on a <a href='/example/show?id=".$this->i1."'>comment</a>"; 
        
        return "<div class='alert alert-voted-comment'>$str</div>";
    }
    
    public function toStringVotedOnAnswer() {
        $vote = Doctrine::getTable("Vote")->find($this->i1);
        $answer = Doctrine::getTable("Answer")->find($this->i2);
        $url = $answer->getUrl();
        
        $str = $this->_genAuthorHtml()." voted on an <a href='$url'>answer</a>";
        return "<div class='alert alert-votted'>$str</div>";
    }
    
    //tested
    public function toStringVotedOnAnswerConcept() {
        return "Error: This activity should never happen!!";
    }
    public function toStringCommentedOnComment() {
		
    	$example = Doctrine::getTable("Example")->find($this->i1);
    	// $comment1 = Doctrine::getTable("Comment")->find($this->i2);
    	// $comment2 = Doctrine::getTable("Comment")->find($this->i3);
		$exampleName = $example->name;
		$exampleUrl = $example->getUrl();
		$str = $this->_genAuthorHtml()." replied to a comment in <a href='$exampleUrl'>$exampleName</a>";

		return "<div class='alert alert-comment-comment'>$str</div>";
    }
    
    // this is not used yet
    public function toStringCommentedOnAnswer() {
        $comment = Doctrine::getTable("Comment")->find($this->i1);
        $answer = Doctrine::getTable("Answer")->find($this->i2);
        
        $answerUrl = $answer->getUrl();
        $answerName = $answer->name;
        
        $str = $this->_genAuthorHtml()." commented on an answer(<a href='$url'>$answerName</a>)";
        return "<div class='alert alert-comment-answer'>$str</div>";
    }
    public function toStringCommentedOnExample() {
        $comment = Doctrine::getTable("Comment")->find($this->i2);
        $example = Doctrine::getTable("Example")->find($this->i1);
        
        $exampleUrl = $example->getUrl();
        $exampleName = $example->name;

        $str = $this->_genAuthorHtml()." commented on example <a href='$exampleUrl'>$exampleName</a>";
        return "<div class='alert alert-comment-example'>$str</div>";
    }
    
    public function toStringAssessedComment() {
		// example, comment, assessment
		$commentOn = Doctrine::getTable($this->s1)->find($this->i1);
		$comment = Doctrine::getTable("Comment")->find($this->i2);
		$assessment = Doctrine::getTable("Assessment")->find($this->i3);
		
		$commentOnUrl = $commentOn->getUrl();
		$commentOnName = $commentOn->name;
		
		$str = $this->_genAuthorHtml()." assessed a comment made on <a href='$commentOnUrl'>$commentOnName</a>";
        return "<div class='alert alert-assessed-comment'>$str</div>";
    }
    
    public function toStringAssessedExample() {
		$example = Doctrine::getTable("Example")->find($this->i1);
		
		$exampleUrl = $example->getUrl();
        $exampleName = $example->name;

        $str = $this->_genAuthorHtml()." assessed the example <a href='$exampleUrl'>$exampleName</a>";
        return "<div class='alert alert-assessed-example'>$str</div>";
    }
    
    public function toStringAssessedAnswer() {
		$question = Doctrine::getTable("Question")->find($this->i1);
		
		$questionUrl = $question->getUrl();
        $questionName = $question->name;

        $str = $this->_genAuthorHtml()." assessed the answer <a href='$questionUrl'>$questionName</a>";
        return "<div class='alert alert-assessed-answer'>$str</div>";
    }
    
    //tested
    public function toStringCreatedExample(){
        $example = Doctrine::getTable("Example")->find($this->i1);
        
        $exampleUrl = $example->getUrl();
        $exampleName = $example->name;
        
        $str = $this->_genAuthorHtml()." created example <a href='$exampleUrl'>$exampleName</a>";
        return "<div class='alert alert-created-example'>$str</div>";
    }
    
    //tested
    public function toStringCreatedQuestion() {
        $question = Doctrine::getTable('Question')->find($this->i1);
        $url = $question->getUrl();
        
        $str = $this->_genAuthorHtml()." created a question(<a href='$url'>".$question->name."</a>)";
        return "<div class='alert alert-created-question'>$str</div>";
    }
    
    //tested
    public function toStringAnsweredQuestion(){
        $answer = Doctrine::getTable('Answer')->find($this->i2);
        $question = Doctrine::getTable('Question')->find($this->i1);
        
        $questionUrl = $question->getUrl();
        $questionName = $question->name;
        
        $str = $this->_genAuthorHtml()." answered question <a href='$questionUrl'>$questionName</a>";
        return "<div class='alert alert-question-answered'>$str</div>";
    }
    
    
    public function toStringVotedOnExampleConcept() {
        $example = Doctrine::getTable('Example')->find($this->i1);
        $exampleConcept = Doctrine::getTable('ExampleConcept')->find($this->i2);
        $concept = Doctrine::getTable('Concept')->find($exampleConcept->concept_id);
        $vote = Doctrine_Query::create()
                ->select("*")
                ->from("Vote v")
                ->where("v.obj_id = ?", $exampleConcept->id)
                ->andWhere("v.obj_type = ?", Votable::$EXAMPLE_CONCEPT)
                ->andWhere("v.author_id = ?", $this->author_id)
                ->execute();
        $vote = $vote[0];
        
        $exampleUrl = $example->getUrl();
        $exampleName = $example->name;
        $conceptName = $concept->name;
        
        $verb = $vote->vote_value > 0 ? 'agrees' : 'disagrees';
        
        $str = $this->_genAuthorHtml()." $verb that <a href='$exampleUrl'>$exampleName</a> relates to '$conceptName'";
        return "<div class='alert alert-voted-example'>$str</div>";
    }
    
    //tested
    public function toStringVotedOnQuestionConcept(){
        $question = Doctrine::getTable('Question')->find($this->i1);
        $questionConcept = Doctrine::getTable('QuestionConcept')->find($this->i2);
        $concept = Doctrine::getTable('Concept')->find($questionConcept->concept_id);
        $vote = Doctrine_Query::create()
                ->select("*")
                ->from("Vote v")
                ->where("v.obj_id = ?", $questionConcept->id)
                ->andWhere("v.obj_type = ?", Votable::$QUESTION_CONCEPT)
                ->andWhere("v.author_id = ?", $this->author_id)
                ->execute();
        $vote = $vote[0];
        
        $questionUrl = $question->getUrl();
        $questionName = $question->name;
        $conceptName = $concept->name;
        
        $verb = $vote->vote_value > 0 ? 'agrees' : 'disagrees';
        
        $str = $this->_genAuthorHtml()." $verb that <a href='$questionUrl'>$questionName</a> relates to '$conceptName'";
        return "<div class='alert alert-vote-question-concept'>$str</div>";
    }
    //tested
    public function toStringVotedOnExampleQuestion(){
        return "Error: This activity should never happen!!";
    }
    public function toStringTaggedQuestionWithConcept(){
        $question = Doctrine::getTable('Question')->find($this->i1);
        //$questionConcept = Doctrine::getTable('QuestionConcept')->find($this->i2);
        // anto fixed
        $questionConcept = Doctrine::getTable('QuestionConcept')->find($this->i3);
        
        //$concept = Doctrine::getTable('Concept')->find($questionConcept->concept_id);
        // anto fixed
        $concept = Doctrine::getTable('Concept')->find($this->i2);
        
        $questionUrl = $question->getUrl();
        $questionName = $question->name;
        $conceptName = $concept->name;
        
        $str = $this->_genAuthorHtml()." tagged question <a href='$questionUrl'>$questionName</a> with '$conceptName'";
        
        return "<div class='alert alert-tagged-question'>$str</div>";
    }
    public function toStringTaggedExampleWithConcept(){
        $example = Doctrine::getTable('Example')->find($this->i1);
        //$exampleConcept = Doctrine::getTable('ExampleConcept')->find($this->i2);
        // anto fixed
        $exampleConcept = Doctrine::getTable('ExampleConcept')->find($this->i3);
        
        //$concept = Doctrine::getTable('Concept')->find($exampleConcept->concept_id);
        // anto fixed
        $concept = Doctrine::getTable('Concept')->find($this->i2);
        
        $exampleUrl = $example->getUrl();
        $exampleName = $example->name;
        $conceptName = $concept->name;
        
        $str = $this->_genAuthorHtml()." tagged example <a href='$exampleUrl'>$exampleName</a> with '$conceptName'";
        
        return "<div class='alert alert-tagged-example'>$str</div>";
    }    
    
    
    
    
    private function _genAuthorHtml(){
        return "<strong>".$this->_author->display_name."</strong>";
    }
}